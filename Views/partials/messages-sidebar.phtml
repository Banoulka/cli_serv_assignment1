<div class="watch-wrapper sticky-top">
    <div class="watchlist-sidebar" id="body">
        <div class="watchlist-sidebar-head-container">
            <h3 class="m-0">Your Messages</h3>
        </div>

        <div class="watchlist-sidebar-body-container msg-sidebar">
            <div id="m-head" class="sticky-top">
                <div class="m-header sticky-top" id="m-header">
                    <button id="back-btn" class="btn btn-outline-primary"><i class="fas fa-caret-left"></i></button>
                    <h2>${json.userFrom.first_name}</h2>
                </div>
            </div>
            <div id="messages">
                <div class="d-flex h-100 align-items-center justify-content-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <button id="scroll-to-bottom" class="scroll-button"><i class="fas fa-angle-double-down"></i></button>
    <a href="users/profile.php?tab=settings" class="sidebar-edit-link">Edit Your Sidebar</a>
</div>

<script>
    document.addEventListener("DOMContentLoaded", async () => {

        const res = await fetch("../requests/auth/me");
        const data = await res.json();
        const user = data.user;

        const messagesList = $("#messages");
        const scrollButton = document.getElementById("scroll-to-bottom");
        scrollButton.addEventListener("click", scrollToContent);

        if (user) {
            startSlimfo();
        }

        function startSlimfo() {
            // Start off the animations by removing classes,
            // waits for transition slide up to finish before
            // sending server requetsts
            let watchlist = document.getElementById("body");
            watchlist.removeEventListener("scroll", handleWatchlistScroll);

            scrollButton.classList.remove("show");
            document.getElementById("m-header").classList.remove("sm");
            
            messagesList.slideUp(800, getSlimfo);
        }

        async function getSlimfo() {
            const res = await fetch("../requests/messages/slimfo");
            const json = await res.json();

            const info = json.info;

            messagesList[0].innerHTML = "";
            $("#m-head")[0].innerHTML = "";

            let index = 0;
            info.forEach(item => {
                // Destruct
                const { display_name, first_name, last_name, lmessage, latest, Unread, user_id} = item;

                let unread = parseInt(Unread) > 0 ? "unread" : "";
                let displayName = !display_name ? first_name + " " + last_name : display_name;

               let htmlString = `
                   <div class="message ${unread}" id="c-${user_id}" style="--index: ${index}; --length: ${info.length};">
                        <h2>${displayName}</h2>
                        <p>${lmessage}</p>
                        <small>${latest}</small>
                    </div>
               `;
               index++;
               messagesList.append(htmlString);

            });
            let messages = document.getElementsByClassName("message");
            messagesList.slideDown();

            for(let message of messages) {
                message.classList.add("sm");
                message.addEventListener("click", startDisplay);
            }
        }

        let loadingMessages = false;

        function startDisplay() {
            let id = this.id.substr(2);
            // Remove the sm class from all the messages,
            // starting the transition fade out animation
            let oldMessages = document.getElementsByClassName("message");
            for (let message of oldMessages) {
                message.classList.remove("sm");
            }
            setTimeout(() => messagesList.slideUp(500, () => displaySingleConversation(id)), 600);

        }

        async function displaySingleConversation(id) {
            if (loadingMessages) {
                return;
            }
            loadingMessages = true;

            // Get the single conversation
            const res = await fetch(`../requests/messages/conversation/${id}`);
            const json = await res.json();

            // Display the header
            let htmlString = `
                <div class="m-header sticky-top" id="m-header">
                    <button id="back-btn" class="btn btn-outline-primary"><i class="fas fa-caret-left"></i></button>
                    <h2>${json.userFrom.first_name}</h2>
                </div>
            `;

            $("#m-head").append(htmlString);

            let messages = json.messages;
            messagesList[0].innerHTML = "";

            messages.forEach(item => {
                const { body, timestamp, read, own } = item;
                let self = own ? "self" : "";

                let htmlString = `
                        <div class="single-message ${self}">
                            <p>${body}</p>
                            <small>${timestamp}</small>
                        </div>`;

                messagesList.append(htmlString);
            });

            document.getElementById("back-btn").addEventListener("click", startSlimfo);

            messagesList.slideDown(600);
            document.getElementById("m-header").classList.add("sm");
            // scrollButton.classList.add("show");
            loadingMessages = false;

            let watchlist = document.getElementById("body");
            watchlist.addEventListener("scroll", handleWatchlistScroll);
            // scrollToContent();
        }

        function scrollToContent(){
            const content = $("#body");
            content.scrollTop(content.prop("scrollHeight"));
        }


        function handleWatchlistScroll() {
            if (this.scrollTop >= this.scrollHeight - this.clientHeight - 200) {
                scrollButton.classList.remove("show");
            } else {
                scrollButton.classList.add("show");
            }
        }

    });
</script>